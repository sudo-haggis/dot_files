local lspconfig = require('lspconfig')
-- print("LSP config loading...")

-- Get explicit go path
local go_path = vim.fn.trim(vim.fn.system('go env GOPATH'))
local gopls_path = vim.fn.exepath('gopls')
-- print("GOPATH: " .. go_path)
-- print("Gopls path: " .. gopls_path)

-- Setup gopls
lspconfig.gopls.setup({
    cmd = {gopls_path, "serve"},
    filetypes = {"go", "gomod", "gowork", "gotmpl"},
    root_dir = require('lspconfig.util').root_pattern("go.work", "go.mod", ".git"),
    settings = {
        gopls = {
            analyses = {
                unusedparams = true,
            },
            staticcheck = true,
            usePlaceholders = true,
            completeUnimported = true,
        },
    },
    on_attach = function(client, bufnr)
        -- print("LSP attached!")
        
        -- Enable completion triggered by <c-x><c-o>
        vim.api.nvim_buf_set_option(bufnr, 'omnifunc', 'v:lua.vim.lsp.omnifunc')
        
        local bufopts = { noremap=true, silent=true, buffer=bufnr }
        vim.keymap.set('n', 'gd', vim.lsp.buf.definition, bufopts)
        vim.keymap.set('n', 'n', vim.lsp.buf.hover, bufopts)
        vim.keymap.set('n', '<space>rn', vim.lsp.buf.rename, bufopts)
        vim.keymap.set('n', '<space>ca', vim.lsp.buf.code_action, bufopts)
        vim.keymap.set('n', 'gr', vim.lsp.buf.references, bufopts)
    end,
    flags = {
        debounce_text_changes = 150,
    },
})

